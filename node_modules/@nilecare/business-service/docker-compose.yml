version: '3.8'

services:
  business-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nilecare-business-service
    ports:
      - "${PORT:-7010}:7010"
    environment:
      - PORT=7010
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=${DB_HOST:-mysql}
      - DB_PORT=${DB_PORT:-3306}
      - DB_NAME=${DB_NAME:-nilecare}
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - CLIENT_URL=${CLIENT_URL:-http://localhost:5173}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:5173}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - nilecare-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:7010/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mysql:
    image: mysql:8.0
    container_name: nilecare-business-mysql
    environment:
      - MYSQL_DATABASE=nilecare
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-root}
      - MYSQL_USER=${DB_USER:-nilecare_user}
      - MYSQL_PASSWORD=${DB_PASSWORD:-nilecare_pass}
    ports:
      - "3307:3306"  # External port to avoid conflict with existing MySQL
    volumes:
      - mysql_data:/var/lib/mysql
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - nilecare-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD:-root}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: nilecare-business-redis
    ports:
      - "6380:6379"  # External port to avoid conflict
    networks:
      - nilecare-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  nilecare-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local

