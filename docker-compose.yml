version: '3.8'

services:
  # =================================================================
  # DATABASE SERVICES
  # =================================================================
  
  mysql:
    image: mysql:8.0
    container_name: nilecare-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpass}
      MYSQL_DATABASE: ${DB_NAME:-nilecare}
      MYSQL_USER: ${DB_USER:-nilecare_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-nilecare_pass}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/mysql:/docker-entrypoint-initdb.d
    networks:
      - nilecare-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
  
  postgres:
    image: postgres:15-alpine
    container_name: nilecare-postgres
    environment:
      POSTGRES_DB: ${PG_DB_NAME:-nilecare}
      POSTGRES_USER: ${PG_DB_USER:-nilecare_user}
      POSTGRES_PASSWORD: ${PG_DB_PASSWORD:-nilecare_pass}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/postgresql:/docker-entrypoint-initdb.d
    networks:
      - nilecare-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_DB_USER:-nilecare_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: nilecare-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nilecare-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # =================================================================
  # MICROSERVICES
  # =================================================================

  main-orchestrator:
    build:
      context: ./microservices/main-nilecare
      dockerfile: Dockerfile
    container_name: nilecare-orchestrator
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 7000
      
      # Database
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-nilecare}
      DB_USER: ${DB_USER:-nilecare_user}
      DB_PASSWORD: ${DB_PASSWORD:-nilecare_pass}
      
      # JWT
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      
      # Service URLs
      BUSINESS_SERVICE_URL: http://business-service:7010
      AUTH_SERVICE_URL: http://auth-service:7020
      PAYMENT_SERVICE_URL: http://payment-service:7030
      APPOINTMENT_SERVICE_URL: http://appointment-service:7040
      
      # CORS
      CORS_ORIGIN: http://localhost:5173,http://localhost:3000
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "7000:7000"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nilecare-network
    volumes:
      - ./microservices/main-nilecare/logs:/app/logs
    restart: unless-stopped

  business-service:
    build:
      context: ./microservices/business
      dockerfile: Dockerfile
    container_name: nilecare-business
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 7010
      
      # Database
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-nilecare}
      DB_USER: ${DB_USER:-nilecare_user}
      DB_PASSWORD: ${DB_PASSWORD:-nilecare_pass}
      
      # JWT
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Client URL
      CLIENT_URL: http://localhost:5173
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "7010:7010"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nilecare-network
    volumes:
      - ./microservices/business/logs:/app/logs
    restart: unless-stopped

  auth-service:
    build:
      context: ./microservices/auth-service
      dockerfile: Dockerfile
    container_name: nilecare-auth
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 7020
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${PG_DB_NAME:-nilecare}
      DB_USER: ${PG_DB_USER:-nilecare_user}
      DB_PASSWORD: ${PG_DB_PASSWORD:-nilecare_pass}
      
      # JWT
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # CORS
      CORS_ORIGIN: http://localhost:5173,http://localhost:3000
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "7020:7020"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nilecare-network
    volumes:
      - ./microservices/auth-service/logs:/app/logs
    restart: unless-stopped

  payment-service:
    build:
      context: ./microservices/payment-gateway-service
      dockerfile: Dockerfile
    container_name: nilecare-payment
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 7030
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${PG_DB_NAME:-nilecare}
      DB_USER: ${PG_DB_USER:-nilecare_user}
      DB_PASSWORD: ${PG_DB_PASSWORD:-nilecare_pass}
      
      # JWT
      JWT_SECRET: ${JWT_SECRET}
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # Payment Gateways
      STRIPE_API_KEY: ${STRIPE_API_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID}
      PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET}
      FLUTTERWAVE_PUBLIC_KEY: ${FLUTTERWAVE_PUBLIC_KEY}
      FLUTTERWAVE_SECRET_KEY: ${FLUTTERWAVE_SECRET_KEY}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "7030:7030"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nilecare-network
    volumes:
      - ./microservices/payment-gateway-service/logs:/app/logs
    restart: unless-stopped

  appointment-service:
    build:
      context: ./microservices/appointment-service
      dockerfile: Dockerfile
    container_name: nilecare-appointment
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 7040
      
      # Database
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-nilecare}
      DB_USER: ${DB_USER:-nilecare_user}
      DB_PASSWORD: ${DB_PASSWORD:-nilecare_pass}
      
      # JWT
      JWT_SECRET: ${JWT_SECRET}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "7040:7040"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - nilecare-network
    volumes:
      - ./microservices/appointment-service/logs:/app/logs
    restart: unless-stopped

  # =================================================================
  # FRONTEND
  # =================================================================

  web-dashboard:
    build:
      context: ./clients/web-dashboard
      dockerfile: Dockerfile
    container_name: nilecare-dashboard
    environment:
      VITE_API_URL: http://localhost:7000
      VITE_AUTH_SERVICE_URL: http://localhost:7020
    ports:
      - "5173:5173"
    depends_on:
      - main-orchestrator
    networks:
      - nilecare-network
    restart: unless-stopped

# =================================================================
# NETWORKS
# =================================================================

networks:
  nilecare-network:
    driver: bridge

# =================================================================
# VOLUMES
# =================================================================

volumes:
  mysql_data:
  postgres_data:
  redis_data:

