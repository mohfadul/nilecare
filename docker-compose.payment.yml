# ============================================================================
# Docker Compose - Payment System
# NileCare Payment Gateway Service with dependencies
# ============================================================================

version: '3.8'

services:
  # ============================================================================
  # Payment Gateway Service
  # ============================================================================
  payment-gateway-service:
    build:
      context: ./microservices/payment-gateway-service
      dockerfile: Dockerfile
    container_name: nilecare-payment-gateway
    ports:
      - "7001:7001"
    environment:
      # Service Configuration
      - NODE_ENV=production
      - PORT=7001
      - SERVICE_NAME=payment-gateway-service
      
      # Database Configuration
      - DB_HOST=mysql-payment
      - DB_PORT=3306
      - DB_NAME=nilecare_payment_system
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_CONNECTION_POOL_MIN=10
      - DB_CONNECTION_POOL_MAX=100
      
      # Redis Configuration
      - REDIS_HOST=redis-payment
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=2
      
      # Kafka Configuration
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_CLIENT_ID=payment-gateway-service
      
      # Payment Encryption
      - PAYMENT_ENCRYPTION_KEY=${PAYMENT_ENCRYPTION_KEY}
      
      # Bank of Khartoum
      - BANK_OF_KHARTOUM_API_KEY=${BANK_OF_KHARTOUM_API_KEY}
      - BANK_OF_KHARTOUM_API_SECRET=${BANK_OF_KHARTOUM_API_SECRET}
      - BANK_OF_KHARTOUM_API_URL=https://api.bankofkhartoum.com
      - BANK_OF_KHARTOUM_MERCHANT_ID=${BANK_OF_KHARTOUM_MERCHANT_ID}
      
      # Faisal Islamic Bank
      - FAISAL_ISLAMIC_API_KEY=${FAISAL_ISLAMIC_API_KEY}
      - FAISAL_ISLAMIC_API_SECRET=${FAISAL_ISLAMIC_API_SECRET}
      - FAISAL_ISLAMIC_API_URL=https://api.faisalbank.sd
      - FAISAL_ISLAMIC_MERCHANT_ID=${FAISAL_ISLAMIC_MERCHANT_ID}
      
      # Omdurman National Bank
      - OMDURMAN_NATIONAL_API_KEY=${OMDURMAN_NATIONAL_API_KEY}
      - OMDURMAN_NATIONAL_API_SECRET=${OMDURMAN_NATIONAL_API_SECRET}
      - OMDURMAN_NATIONAL_API_URL=https://api.onb.sd
      
      # Zain Cash
      - ZAIN_CASH_API_KEY=${ZAIN_CASH_API_KEY}
      - ZAIN_CASH_API_SECRET=${ZAIN_CASH_API_SECRET}
      - ZAIN_CASH_API_URL=https://api.zaincash.sd
      - ZAIN_CASH_MERCHANT_ID=${ZAIN_CASH_MERCHANT_ID}
      
      # MTN Mobile Money
      - MTN_MONEY_API_KEY=${MTN_MONEY_API_KEY}
      - MTN_MONEY_API_SECRET=${MTN_MONEY_API_SECRET}
      - MTN_MONEY_API_URL=https://api.mtn.sd
      - MTN_MONEY_MERCHANT_ID=${MTN_MONEY_MERCHANT_ID}
      
      # Sudani Cash
      - SUDANI_CASH_API_KEY=${SUDANI_CASH_API_KEY}
      - SUDANI_CASH_API_SECRET=${SUDANI_CASH_API_SECRET}
      - SUDANI_CASH_API_URL=https://api.sudanicash.sd
      - SUDANI_CASH_MERCHANT_ID=${SUDANI_CASH_MERCHANT_ID}
      
      # Bankak
      - BANKAK_API_KEY=${BANKAK_API_KEY}
      - BANKAK_API_SECRET=${BANKAK_API_SECRET}
      - BANKAK_API_URL=https://api.bankak.com
      - BANKAK_MERCHANT_ID=${BANKAK_MERCHANT_ID}
      
      # Visa/Mastercard (International Gateway)
      - PAYMENT_GATEWAY_API_KEY=${PAYMENT_GATEWAY_API_KEY}
      - PAYMENT_GATEWAY_API_SECRET=${PAYMENT_GATEWAY_API_SECRET}
      - PAYMENT_GATEWAY_API_URL=https://api.paymentgateway.com
      
      # Webhook Configuration
      - PAYMENT_WEBHOOK_SECRET=${PAYMENT_WEBHOOK_SECRET}
      - APP_URL=${APP_URL:-https://nilecare.sd}
      
      # AWS S3 (Evidence Storage)
      - AWS_REGION=me-south-1
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=nilecare-payment-evidence
      
      # Monitoring
      - PROMETHEUS_ENABLED=true
      - JAEGER_ENABLED=true
      
      # Logging
      - LOG_LEVEL=info
      
    volumes:
      - ./logs/payment:/app/logs
    networks:
      - nilecare-network
    depends_on:
      - mysql-payment
      - redis-payment
      - kafka
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ============================================================================
  # Payment Worker (Background Jobs)
  # ============================================================================
  payment-worker:
    build:
      context: ./microservices/payment-gateway-service
      dockerfile: Dockerfile
    container_name: nilecare-payment-worker
    command: npm run start:worker
    environment:
      - NODE_ENV=production
      - SERVICE_NAME=payment-worker
      - DB_HOST=mysql-payment
      - DB_PORT=3306
      - DB_NAME=nilecare_payment_system
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis-payment
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - KAFKA_BROKERS=kafka:9092
    networks:
      - nilecare-network
    depends_on:
      - payment-gateway-service
      - redis-payment
    restart: unless-stopped

  # ============================================================================
  # MySQL - Payment Database
  # ============================================================================
  mysql-payment:
    image: mysql:8.0
    container_name: nilecare-mysql-payment
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=nilecare_payment_system
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql-payment-data:/var/lib/mysql
      - ./database/mysql/schema/payment_system.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - nilecare-network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ============================================================================
  # Redis - Payment Cache
  # ============================================================================
  redis-payment:
    image: redis:7-alpine
    container_name: nilecare-redis-payment
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 1gb --maxmemory-policy allkeys-lru
    ports:
      - "6380:6379"
    volumes:
      - redis-payment-data:/data
    networks:
      - nilecare-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ============================================================================
  # Payment Reconciliation Service
  # ============================================================================
  payment-reconciliation-worker:
    build:
      context: ./microservices/payment-gateway-service
      dockerfile: Dockerfile
    container_name: nilecare-reconciliation-worker
    command: npm run start:reconciliation-worker
    environment:
      - NODE_ENV=production
      - DB_HOST=mysql-payment
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis-payment
    networks:
      - nilecare-network
    depends_on:
      - mysql-payment
    restart: unless-stopped

  # ============================================================================
  # Payment Monitoring & Metrics
  # ============================================================================
  payment-metrics-exporter:
    build:
      context: ./microservices/payment-gateway-service
      dockerfile: Dockerfile.metrics
    container_name: nilecare-payment-metrics
    ports:
      - "9101:9101"
    environment:
      - DB_HOST=mysql-payment
      - DB_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - nilecare-network
    depends_on:
      - mysql-payment
    restart: unless-stopped

# ============================================================================
# Networks
# ============================================================================
networks:
  nilecare-network:
    external: true

# ============================================================================
# Volumes
# ============================================================================
volumes:
  mysql-payment-data:
    driver: local
  redis-payment-data:
    driver: local

